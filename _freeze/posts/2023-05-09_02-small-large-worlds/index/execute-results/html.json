{
  "hash": "518196590d4ce9e42bb622f8a7af56bd",
  "result": {
    "markdown": "---\ntitle: \"02 Small Worlds and Large Worlds\"\ndate: 2023-05-09\norder: 3\ntags: \n  - \"chapter 2\"\n---\n\n\n::: callout-note\n## listening\n\n<iframe style=\"border-radius:12px\" src=\"https://open.spotify.com/embed/track/5VJM0bWDzg3S2eN7LzAYPa?utm_source=generator&amp;theme=0\" width=\"100%\" height=\"152\" frameBorder=\"0\" allowfullscreen allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" loading=\"lazy\">\n\n</iframe>\n:::\n\nIn the analogy, models are \"Small\", self-contained worlds.\n\n> Within the small world, all possibilities are nominated.\n\n## Garden of forking paths.\n\nI was thinking of working out the probabilities by doing random sampling...\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(gt)\nlibrary(patchwork)\nlibrary(here)\nsource(here(\"_defaults.R\"))\n```\n:::\n\n\nGenerating the marble dataframe\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(\n  blue_marbs = 0:4,\n  white_marbs = 4 - blue_marbs\n) |> \n  rowwise() |> \n  mutate(\n    marbles = list(c(rep(\"blue\", blue_marbs), rep(\"white\", white_marbs)))\n  ) -> \n  marbles\n```\n:::\n\n::: {#tbl-marb-sampling .cell tbl-cap='The marble sampling distributions'}\n\n```{.r .cell-code}\nmarbles |> \n  gt()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"kljjyuphja\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#kljjyuphja table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#kljjyuphja thead, #kljjyuphja tbody, #kljjyuphja tfoot, #kljjyuphja tr, #kljjyuphja td, #kljjyuphja th {\n  border-style: none;\n}\n\n#kljjyuphja p {\n  margin: 0;\n  padding: 0;\n}\n\n#kljjyuphja .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#kljjyuphja .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#kljjyuphja .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#kljjyuphja .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#kljjyuphja .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#kljjyuphja .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kljjyuphja .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#kljjyuphja .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#kljjyuphja .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#kljjyuphja .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#kljjyuphja .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#kljjyuphja .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#kljjyuphja .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#kljjyuphja .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#kljjyuphja .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#kljjyuphja .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#kljjyuphja .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#kljjyuphja .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#kljjyuphja .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kljjyuphja .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#kljjyuphja .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#kljjyuphja .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#kljjyuphja .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kljjyuphja .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#kljjyuphja .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#kljjyuphja .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kljjyuphja .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kljjyuphja .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#kljjyuphja .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kljjyuphja .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#kljjyuphja .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kljjyuphja .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#kljjyuphja .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kljjyuphja .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#kljjyuphja .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kljjyuphja .gt_left {\n  text-align: left;\n}\n\n#kljjyuphja .gt_center {\n  text-align: center;\n}\n\n#kljjyuphja .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#kljjyuphja .gt_font_normal {\n  font-weight: normal;\n}\n\n#kljjyuphja .gt_font_bold {\n  font-weight: bold;\n}\n\n#kljjyuphja .gt_font_italic {\n  font-style: italic;\n}\n\n#kljjyuphja .gt_super {\n  font-size: 65%;\n}\n\n#kljjyuphja .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#kljjyuphja .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#kljjyuphja .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#kljjyuphja .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#kljjyuphja .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#kljjyuphja .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#kljjyuphja .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"blue_marbs\">blue_marbs</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"white_marbs\">white_marbs</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"marbles\">marbles</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"blue_marbs\" class=\"gt_row gt_right\">0</td>\n<td headers=\"white_marbs\" class=\"gt_row gt_right\">4</td>\n<td headers=\"marbles\" class=\"gt_row gt_center\">white, white, white, white</td></tr>\n    <tr><td headers=\"blue_marbs\" class=\"gt_row gt_right\">1</td>\n<td headers=\"white_marbs\" class=\"gt_row gt_right\">3</td>\n<td headers=\"marbles\" class=\"gt_row gt_center\">blue, white, white, white</td></tr>\n    <tr><td headers=\"blue_marbs\" class=\"gt_row gt_right\">2</td>\n<td headers=\"white_marbs\" class=\"gt_row gt_right\">2</td>\n<td headers=\"marbles\" class=\"gt_row gt_center\">blue, blue, white, white</td></tr>\n    <tr><td headers=\"blue_marbs\" class=\"gt_row gt_right\">3</td>\n<td headers=\"white_marbs\" class=\"gt_row gt_right\">1</td>\n<td headers=\"marbles\" class=\"gt_row gt_center\">blue, blue, blue, white</td></tr>\n    <tr><td headers=\"blue_marbs\" class=\"gt_row gt_right\">4</td>\n<td headers=\"white_marbs\" class=\"gt_row gt_right\">0</td>\n<td headers=\"marbles\" class=\"gt_row gt_center\">blue, blue, blue, blue</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nIn retrospect, I'm glad I did this, because I thought we were sampling *without* replacement.\n\nHere's a function that will repeatedly sample from a set of marbles, and compare the result to a reference group.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsampling_df <- function(marbles, n = 1000, size = 3, pattern = c(\"blue\", \"white\", \"blue\")){\n  sampling_tibble <- tibble(samp = 1:n)    #<1>\n  sampling_tibble |> \n    mutate(\n      chosen = map(samp, ~sample(marbles, size = 3, replace = T)), #<2>\n      match = map_lgl(chosen, ~all(.x == pattern))                 #<3>\n    ) |> \n    summarise(prop_match = mean(match))->                          #<4>\n    sampling_tibble\n  return(sampling_tibble)\n}\n```\n:::\n\n\n1.  I'll capture everything within a tibble.\n2.  Rowwise, sample from `marbles` with replacement.\n3.  Return `T` or `F` if the sequence matches the pattern exactly.\n4.  The `mean()` of the `T`, `F` column to get the proportion that match.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsampling_df(\n  marbles = marbles$marbles[[4]],\n  n = 5000\n) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  prop_match\n       <dbl>\n1      0.140\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmarbles |> \n ungroup() |> \n  mutate(\n    prob = map(marbles, ~sampling_df(.x, n = 10000))\n  ) |> \n  unnest(prob) |> \n  mutate(norm_probs = prop_match/sum(prop_match))->\n  marble_probs\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmarble_probs |> \n  ggplot(aes(blue_marbs, norm_probs))+\n    geom_col(fill = \"steelblue4\")+\n    labs(\n      title = \"blue, white, blue\",\n      x = \"# of blue marbles\",\n      y = \"probability\"\n    ) + \n  ylim(0,1)->probs1\nprobs1\n```\n\n::: {.cell-output-display}\n![Probability of each composition of marbles](index_files/figure-html/fig-obs1-1.png){#fig-obs1 width=576}\n:::\n:::\n\n\n## Updating probabilities\n\nWhat if we draw one more blue\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmarble_probs |> \n  mutate(new_obs_prob = blue_marbs / sum(blue_marbs),\n         posterior_prob = norm_probs * new_obs_prob,\n         posterior_norm = posterior_prob/sum(posterior_prob))->\n  marble_probs\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmarble_probs |> \n  ggplot(aes(blue_marbs, posterior_norm))+\n    geom_col(fill = \"steelblue4\")+\n    ylim(0,1)+\n      labs(\n      title = \"probability update after blue\",\n      x = \"# of blue marbles\",\n      y = \"probability\"\n    ) ->\n  probs2\n\nprobs1 | probs2\n```\n\n::: {.cell-output-display}\n![Bayesian update](index_files/figure-html/fig-update-1.png){#fig-update width=960}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}