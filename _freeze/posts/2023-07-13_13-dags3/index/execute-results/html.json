{
  "hash": "091d5f10acda628465b8a49e6e423dcf",
  "result": {
    "markdown": "---\ntitle: \"DAGS part 3\"\norder: 14\ndate: 2023-07-13\ntwitter-card: true\nopen-graph: true\n---\n\n\n::: callout-note\n## Listening\n\n<iframe style=\"border-radius:12px\" src=\"https://open.spotify.com/embed/track/5ZmhfMG9rPl7GMTHUOi3Wq?utm_source=generator\" width=\"100%\" height=\"152\" frameBorder=\"0\" allowfullscreen allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" loading=\"lazy\">\n\n</iframe>\n:::\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyverse)\nlibrary(tidybayes)\nlibrary(brms)\nlibrary(gt)\nlibrary(gtsummary)\nlibrary(patchwork)\nlibrary(ggblend)\nlibrary(marginaleffects)\nlibrary(dagitty)\nlibrary(ggdag)\n\nsource(here::here(\"_defaults.r\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2023-7-12)\n```\n:::\n\n\n## The Getting Total Expected Effects\n\nOk, for the milk data, where the neocortex percentage is correlated with bodymass, how would we get the expected effect of increasing body mass?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(milk, package = \"rethinking\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmilk |> \n  drop_na() |> \n  mutate(\n    kcal_z = (kcal.per.g-mean(kcal.per.g))/sd(kcal.per.g),\n    neoc_z = (neocortex.perc-mean(neocortex.perc))/sd(neocortex.perc),\n    log_mass = log(mass),\n    log_mass_z = (log_mass - mean(log_mass))/sd(log_mass)\n  ) ->\n  milk_to_mod\n```\n:::\n\n\nWe'll have to commit to a DAG, so I'll go with this:\n\n\n```{mermaid}\nflowchart LR\n  Mass --> Neocortex\n  Mass --> KCal\n  Neocortex --> KCal\n```\n\n\n::: {.callout-note collapse=\"true\"}\n## The DAG in Mermaid\n\nMaking the DAG in Mermaid was so much nicer!\n\n```         \nflowchart LR\n  Mass --> Neocortex\n  Mass --> KCal\n  Neocortex --> KCal\n```\n:::\n\nSo I'll use this formula:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmnk_formula <- bf(\n  kcal_z ~ log_mass_z + neoc_z\n) +\nbf(\n  neoc_z ~ log_mass_z\n) +\nset_rescor(FALSE)\n```\n:::\n\n\nI'm still just superstitiously using `set_rescor()`, since I don't really understand where it's supposed to be used or not, but everyone seems to include it in these things.\n\n### Fitting the model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbrm(\n  formula = mnk_formula,\n  prior = c(\n    prior(normal(0,0.5), class = b, resp = kcalz),\n    prior(normal(0,0.5), class = b, resp = neocz),    \n    prior(normal(0,0.2), class = Intercept, resp = kcalz),\n    prior(normal(0,0.2), class = Intercept, resp = neocz),    \n    prior(exponential(1), class = sigma, resp = kcalz),\n    prior(exponential(1), class = sigma, resp = neocz) \n  ),\n  data = milk_to_mod,\n  cores = 4,\n  file = \"mnk_model.rds\",\n  backend = \"cmdstanr\"\n)->\n  mnk_model\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmnk_model\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Family: MV(gaussian, gaussian) \n  Links: mu = identity; sigma = identity\n         mu = identity; sigma = identity \nFormula: kcal_z ~ log_mass_z + neoc_z \n         neoc_z ~ log_mass_z \n   Data: milk_to_mod (Number of observations: 17) \n  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;\n         total post-warmup draws = 4000\n\nPopulation-Level Effects: \n                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nkcalz_Intercept      0.00      0.14    -0.27     0.27 1.00     4345     2715\nneocz_Intercept     -0.00      0.13    -0.26     0.25 1.00     4328     2924\nkcalz_log_mass_z    -0.68      0.26    -1.17    -0.12 1.00     2730     2916\nkcalz_neoc_z         0.57      0.26     0.03     1.08 1.00     2662     2873\nneocz_log_mass_z     0.67      0.17     0.32     1.00 1.00     3994     2789\n\nFamily Specific Parameters: \n            Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nsigma_kcalz     0.81      0.17     0.56     1.21 1.00     3244     2719\nsigma_neocz     0.72      0.14     0.51     1.05 1.00     3922     2591\n\nDraws were sampled using sample(hmc). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n```\n:::\n:::\n\n\n### Getting the total effect of bodymass \n\nI *think* to work out the total effect of increasing body mass, I need to get the estimated neocortex size for each body mass, and then use *that* to get the estimated caloric value?\n\nI *also* don't think the out-of-the-box functions like `marginaleffects::predictions()` or `tidybayes::add_epred_draws()` will do the trick either? We'll have to get analog.\n\n#### Step 1: Get all of the parameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmnk_model |> \n  spread_draws(\n    `b_.*`,\n    regex = T\n  )->\n  mnk_parameters\n\ncolnames(mnk_parameters)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \".chain\"             \".iteration\"         \".draw\"             \n[4] \"b_kcalz_Intercept\"  \"b_neocz_Intercept\"  \"b_kcalz_log_mass_z\"\n[7] \"b_kcalz_neoc_z\"     \"b_neocz_log_mass_z\"\n```\n:::\n:::\n\n\n#### Step 2: Get the predicted neocortex sizes\n\nOk, if `log_mass_z` = 0, the expected value of neocortex would just be the Intercept, or `b_neocz_Intercept`. I'll create a column called `pred_neoc_m0` to mean \"predicted neocortex percentage when mass = 0\". Then, I'll create a column called `pred_neoc_m1` for \"predicted neocortex percentage when mass = 1\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmnk_parameters |> \n  mutate(\n    pred_neoc_m0 = b_neocz_Intercept,\n    pred_neoc_m1 = b_neocz_Intercept + b_neocz_log_mass_z\n  )->\n  mnk_parameters\n```\n:::\n\n\n#### Step 3: Get the predicted kcals\n\nOk, now to get the predicted kcal when body mass = 0, I'll have to multiply `pred_neoc_mo0` by the neocortex slope for kcal.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmnk_parameters |> \n  mutate(\n    pred_kcal_m0 = b_kcalz_Intercept + (b_kcalz_neoc_z * pred_neoc_m0)\n  ) ->\n  mnk_parameters\n```\n:::\n\n\nNow to get the predicted kcal when mass = 1, I'll need to multiply the neocortex slope by the predicted neocortex size when mass = 1, and add the body mass slope.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmnk_parameters |> \n  mutate(\n    pred_kcal_m1 = b_kcalz_Intercept + (b_kcalz_neoc_z + pred_neoc_m1) + b_kcalz_log_mass_z\n  )->\n  mnk_parameters\n```\n:::\n\n\nNow, subtract `pred_kcal_m1` from `pred_kcal_m0` to get the total effect.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmnk_parameters |> \n  mutate(\n    total_mass_effect = pred_kcal_m1 - pred_kcal_m0\n  ) ->\n  mnk_parameters\n```\n:::\n\n\n#### Step 4: Feel confused and pretty certain that you've done it wrong\n\nNow, I'll compare the total effect vs the direct effect.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nmnk_parameters |> \n  select(.draw, b_kcalz_log_mass_z, total_mass_effect) |> \n  pivot_longer(-1) |> \n  mutate(\n    name = case_match(\n      name,\n      \"b_kcalz_log_mass_z\" ~ \"direct effect\",\n      \"total_mass_effect\" ~ \"total effect\"\n    )\n  ) |> \n  ggplot(aes(value, name, fill = name))+\n    stat_halfeye()+\n    labs(\n      fill = \"effect\",\n      y = NULL,\n      x = NULL,\n      title = \"effect of +1 body mass\"\n    )+\n    theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=576}\n:::\n:::\n\n\nWell, I'm a bit nervous about whether I've done this right, especially since the estimated effect of body mass *without* including neocortex in the model was still on the negative side of 0.\n\n*But*, if we take the DAG seriously, then increasing body mass pretty strongly increases neocortex percentage, and that pretty strongly increases the kcal of the milk... so maybe this is right!\n\n## Categorical Variables\n\nReturning to the height data to include some categorical predictors:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(Howell1, package = \"rethinking\")\n\nHowell1 |> \n  filter(\n    age >= 18\n  ) |> \n  mutate(\n    sex = case_match(\n      male,\n      0 ~ \"female\",\n      1 ~ \"male\",\n    ),\n    weight_z = (weight-mean(weight))/sd(weight)\n  ) ->\n  height_to_model\n```\n:::\n\n\nTo use the \"indexing\" approach, I think we'll need to use the `-1` formula syntax to remove the intercept.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheight_formula = bf(\n  height ~ -1 + sex + weight\n)\n```\n:::\n\n\nLet's look at the default priors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_prior(\n  height_formula,\n  data = height_to_model\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                prior class      coef group resp dpar nlpar lb ub       source\n               (flat)     b                                            default\n               (flat)     b sexfemale                             (vectorized)\n               (flat)     b   sexmale                             (vectorized)\n               (flat)     b    weight                             (vectorized)\n student_t(3, 0, 8.5) sigma                                  0         default\n```\n:::\n:::\n\n\nWell, it looks like there's not a very easy way to set one prior over the parameters for `sex` and a different prior for the slope of `weight`. For now I'll just leave the priors at their defaults and see what I get.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbrm(\n  height_formula,\n  data = height_to_model,\n  file = \"height_model.rds\",\n  cores = 4\n) ->\n  height_model\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nheight_model\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Family: gaussian \n  Links: mu = identity; sigma = identity \nFormula: height ~ -1 + sex + weight \n   Data: height_to_model (Number of observations: 352) \n  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;\n         total post-warmup draws = 4000\n\nPopulation-Level Effects: \n          Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nsexfemale   122.74      1.70   119.46   126.01 1.00      835     1208\nsexmale     129.24      1.95   125.47   133.04 1.00      829     1217\nweight        0.64      0.04     0.56     0.72 1.00      820     1264\n\nFamily Specific Parameters: \n      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nsigma     4.29      0.16     3.98     4.63 1.00     1552     1700\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n```\n:::\n:::\n\n\n### ~~Getting Fancier~~\n\nI was going to do some more fancier modelling, looking at the effect of sex on weight, but I think if I was going to draw the DAG out, it would be something like this:\n\n\n```{mermaid}\nflowchart LR\n  sex --> height\n  height --> weight\n  sex --> weight\n```\n\n\nIf we have to draw an arrow of causality between height and weight, it has to go height $\\rightarrow$ weight. Cause taller people necessarily have more mass than shorter people, but people with more mass don't necessarily be taller.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}