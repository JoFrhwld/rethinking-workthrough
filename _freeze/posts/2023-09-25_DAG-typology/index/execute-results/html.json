{
  "hash": "aabc0f77136ecfd20e9bdafb010d0c8d",
  "result": {
    "markdown": "---\ntitle: \"Causal DAG typology\"\ndate: 2023-09-25\norder: 19\ntwitter-card: true\nopen-graph: true\n---\n\n\n::: callout-note\n## Listening\n\n<iframe style=\"border-radius:12px\" src=\"https://open.spotify.com/embed/track/60YQJZuKDW6nqWih5upkoL?utm_source=generator\" width=\"100%\" height=\"152\" frameBorder=\"0\" allowfullscreen allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" loading=\"lazy\">\n\n</iframe>\n:::\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggdag)\nlibrary(broom)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2023-9-25)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(here::here(\"_defaults.R\"))\n```\n:::\n\n\n## Upshot\n\n::: callout-note\n## What I've learned\n\nI get confused thinking about the causality DAGs in terms of *models*. The arrows and paths in the DAGs don't directly translate to terms. in the models. An included term in a model won't necessarily correspond to any simple path from the term to the outcome.\n:::\n\n## DAG typology\n\nI've been reading up a bunch more about causal inference, how these DAGs work, and getting more comfortable with tools like `{ggdag}` and [dagitty](https://www.dagitty.net/). So here's my attempt to work through the \"Confronting Confounding\" section of chapter 6. I'll try to make up linguistic examples as I go along.\n\n### The classic confounder: the fork\n\nThe classic confounding variable is one which is a common cause of both the outcome and the predictor of interest. For example, we might be interested in how speech rate affects the voice onset time of voiceless stops.\n\n\n::: {.cell filename='two variable DAG'}\n\n```{.r .cell-code}\ndagify(\n  vot ~ rate,\n  labels = list(rate = \"speech rate\",\n             vot = \"VOT\"),\n  outcome = \"vot\",\n  exposure = \"rate\",\n  coords = tribble(\n    ~name, ~x, ~y,\n    \"vot\", 1, 0,\n    \"rate\",0, 0\n  )\n) |> \n  ggdag_status(use_labels = \"label\", \n               text = F)+\n  khroma::scale_color_bright()+\n  khroma::scale_fill_bright()+\n  theme_dag()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=576}\n:::\n:::\n\n\nBut, there are variables (observed or unobserved) that can be a common cause of both speech rate and VOT. For example, speech style.\n\n\n::: {.cell filename='three variable dag'}\n\n```{.r .cell-code}\ndagify(\n  vot ~ rate + style,\n  rate ~ style,\n  labels = list(rate = \"speech rate\",\n             vot = \"VOT\",\n             style = \"speech style\"),\n  outcome = \"vot\",\n  exposure = \"rate\",\n  coords = tribble(\n    ~name, ~x, ~y,\n    \"vot\", 1, 0,\n    \"rate\",0, 0,\n    \"style\",0.5, 1\n  )\n) ->\n  three_dag\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nthree_dag |> \n  ggdag_status(use_labels = \"label\", \n               text = F)+\n  khroma::scale_color_bright(na.value = \"grey30\")+\n  khroma::scale_fill_bright(na.value = \"grey30\")+\n  theme_dag()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=576}\n:::\n:::\n\n\nYou can plot all of the paths between speech rate and VOT with `ggdag_paths()`, but to be honest, I still struggle with reading the fork as a path \"from\" speech rate, \"to\" VOT because of the directions of the arrows.\n\n\n::: {.cell code_fold='true'}\n\n```{.r .cell-code}\ntidy_dagitty(three_dag) |> \n  dag_paths() |> \n  node_status()|> \n  filter(!is.na(path)) |> \n  ggplot(\n    aes(x = x, y = y, xend = xend, yend = yend)\n  )+\n    geom_dag_point(aes(color = status))+\n    geom_dag_edges()+\n    geom_dag_label_repel(aes(label = label))+\n    khroma::scale_color_bright(na.value=\"grey60\", guide = \"none\")+\n    facet_wrap(~set)+\n    theme_dag()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=576}\n:::\n:::\n\n\nIt's easier for me to see what each of the paths are by using `dagitty::paths()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndagitty::paths(three_dag)$path\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"rate -> vot\"          \"rate <- style -> vot\"\n```\n:::\n:::\n\n\nIn order to accurately estimate the direct effect of speech rate on VOT, we need to \"condition on\" or \"adjust for\" speech style. That is, we need to include it in the model. You can get the adjustment sets from `{ggdag}` or `{dagitty}`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggdag_adjustment_set(three_dag, use_labels = \"label\", text = F)+\n  theme_dag()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=576}\n:::\n:::\n\n\nI also find this graphical representation a little bit confusing, with the adjusted-for variable kind of just floating there? The model we wind up fitting is going to look like\n\n```         \nvot ~ rate + style\n```\n\nMeaning we are going to get an estimate of `style -> vot`. Maybe one of these mermaid diagrams is the way to go? Here I've got the original DAG with the \"backdoor\" open. Links that aren't included in the model are in dotted lines.\n\n\n```{mermaid}\n%%| label: fig-flow1\n%%| fig-cap: \"`vot ~ rate`\"\nflowchart LR\n  r[\"rate\"] ==> v[\"vot\"]\n  s([\"style\"]) -.-> v\n  s -.-> r\n  \n  style s stroke-dasharray: 5 5\n```\n\n\nBy including style in the model, you're blocking its flow backward through rate.\n\n\n```{mermaid}\n%%| label: fig-flow1\n%%| fig-cap: \"`vot ~ rate + style`\"\nflowchart LR\n  r[\"rate\"] ==> v[\"vot\"]\n  s[\"style\"] ==> v\n  s x-.-x r\n```\n\n\n## Other DAG configurations\n\nThe \"elemental\" DAG configurations are\n\n### The Pipe\n\nThe pipe is the important configuration for \"post-treatment bias.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndagify(\n  schwa ~ vtl,\n  vtl ~ height,\n  outcome = \"schwa\",\n  exposure = \"height\",\n  labels = list(schwa = \"schwa formants\",\n                vtl = \"vocal tract length\",\n                height = \"height\")\n) ->pipe_dag\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\npipe_dag |> \n  ggdag_status(use_labels = \"label\", text = F)+\n    theme_dag()+\n    khroma::scale_color_bright(na.value = \"grey60\")+\n    khroma::scale_fill_bright(na.value = \"grey60\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=576}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndagitty::paths(pipe_dag)$paths\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"height -> vtl -> schwa\"\n```\n:::\n:::\n\n\nThere's no direct causal effect of height on schwa formants, but if you wanted the *total* effect, you'd want to just use\n\n```         \nformants ~ height\n```\n\nIncluding vocal tract length will block the \"flow\" from height. Just modeling schwa formants based on height allow the relationship to \"flow\" through vocal tract length, which wasn't included in the model.\n\n\n```{mermaid}\n%%| label: fig-schwa1\n%%| fig-cap: \"formants ~ height\"\nflowchart LR\n  h[height] ==> v([vtl]) ==> s[schwa formants]\n  \n  style v stroke-dasharray: 5 5\n```\n\n\nIf VTL is included in the model, it blocks the \"flow\" from height.\n\n\n```{mermaid}\n%%| label: fig-schwa2\n%%| fig-cap: \"formants ~ height + vtl\"\nflowchart LR\n  h[height] x-.-x v[vtl] ==> s[schwa formants]\n```\n\n\n### The collider\n\nColliders are still confusing to me. Let's imagine a situation where both word frequency and segment markedness both increase the likelihood of lenition, and we want to see if there's a relationship between segment markedness and word frequency\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndagify(\n  lenition ~ freq + markedness,\n  outcome = \"markedness\",\n  exposure = \"freq\",\n  labels = list(\n    lenition = \"lenition rate\",\n    freq = \"word frequency\",\n    markedness = \"segment markedness\"\n  )\n) ->\n  collide_dag\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ncollide_dag |> \n  ggdag_status(use_labels = \"label\",\n               text = F)+\n    theme_dag()+\n    khroma::scale_color_bright(na.value = \"grey60\")+\n    khroma::scale_fill_bright(na.value = \"grey60\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=576}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndagitty::paths(collide_dag)$paths\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"freq -> lenition <- markedness\"\n```\n:::\n:::\n\n\nThere's no direct effect of frequency on markedness, so `markedness ~ freq` should have no effect. But by *including* the lenition rate, you'd open a causal pathway between the two. I'm not even sure how to indicate this in a mermaid diagram. I need to sketch this out \"manually\".\n\nWithout \"lenition\" included in the model, there's no causal pathway open between markedness and frequency.\n\n![](assets/collider1.svg){fig-align=\"center\"}\n\nBut, when you add lenition, it \"opens up\" a causal pathway where before there wasn't one.\n\n![](assets/collider2.svg){fig-align=\"center\"}\n\n## Revisiting Waffle House Divorces\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(WaffleDivorce, package = \"rethinking\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(WaffleDivorce) |> rmarkdown::paged_table()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Location\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"Loc\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"Population\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"MedianAgeMarriage\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Marriage\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Marriage.SE\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Divorce\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Divorce.SE\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"WaffleHouses\"],\"name\":[9],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"South\"],\"name\":[10],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Slaves1860\"],\"name\":[11],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Population1860\"],\"name\":[12],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"PropSlaves1860\"],\"name\":[13],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Alabama\",\"2\":\"AL\",\"3\":\"4.78\",\"4\":\"25.3\",\"5\":\"20.2\",\"6\":\"1.27\",\"7\":\"12.7\",\"8\":\"0.79\",\"9\":\"128\",\"10\":\"1\",\"11\":\"435080\",\"12\":\"964201\",\"13\":\"0.45\",\"_rn_\":\"1\"},{\"1\":\"Alaska\",\"2\":\"AK\",\"3\":\"0.71\",\"4\":\"25.2\",\"5\":\"26.0\",\"6\":\"2.93\",\"7\":\"12.5\",\"8\":\"2.05\",\"9\":\"0\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0.00\",\"_rn_\":\"2\"},{\"1\":\"Arizona\",\"2\":\"AZ\",\"3\":\"6.33\",\"4\":\"25.8\",\"5\":\"20.3\",\"6\":\"0.98\",\"7\":\"10.8\",\"8\":\"0.74\",\"9\":\"18\",\"10\":\"0\",\"11\":\"0\",\"12\":\"0\",\"13\":\"0.00\",\"_rn_\":\"3\"},{\"1\":\"Arkansas\",\"2\":\"AR\",\"3\":\"2.92\",\"4\":\"24.3\",\"5\":\"26.4\",\"6\":\"1.70\",\"7\":\"13.5\",\"8\":\"1.22\",\"9\":\"41\",\"10\":\"1\",\"11\":\"111115\",\"12\":\"435450\",\"13\":\"0.26\",\"_rn_\":\"4\"},{\"1\":\"California\",\"2\":\"CA\",\"3\":\"37.25\",\"4\":\"26.8\",\"5\":\"19.1\",\"6\":\"0.39\",\"7\":\"8.0\",\"8\":\"0.24\",\"9\":\"0\",\"10\":\"0\",\"11\":\"0\",\"12\":\"379994\",\"13\":\"0.00\",\"_rn_\":\"5\"},{\"1\":\"Colorado\",\"2\":\"CO\",\"3\":\"5.03\",\"4\":\"25.7\",\"5\":\"23.5\",\"6\":\"1.24\",\"7\":\"11.6\",\"8\":\"0.94\",\"9\":\"11\",\"10\":\"0\",\"11\":\"0\",\"12\":\"34277\",\"13\":\"0.00\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nSo, the possible DAG here is\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndagify(\n  d ~ w + m + a,\n  w ~ s,\n  m ~ s + a,\n  labels = list(\n    d = \"divorce rate\",\n    w = \"waffle houses\",\n    a = \"age at marriage\",\n    m = \"marriage rate\",\n    s = \"south\"\n  ),\n  outcome = \"d\",\n  exposure = \"w\"\n) -> waffle_dag\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwaffle_dag |> \n  ggdag_status(\n    use_labels = \"label\",\n    text = F\n  )+\n    theme_dag()+    \n    khroma::scale_color_bright(na.value = \"grey60\")+\n    khroma::scale_fill_bright(na.value = \"grey60\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-1.png){width=576}\n:::\n:::\n\n\nWe can get the paths from waffle houses to divorce rate:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndagitty::paths(waffle_dag)$paths\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"w -> d\"                \"w <- s -> m -> d\"      \"w <- s -> m <- a -> d\"\n```\n:::\n:::\n\n\nIt looks like the most parsimonious thing to do would be to include \"south\" in the model. Simply including \"marriage rate\" would actually open up a path, because marriage rate is a collider. According to dagitty (and the book), if we include marriage rate, we also need to include age, to close the path?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(brms)\nlibrary(tidybayes)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nWaffleDivorce |> \n  mutate(\n    across(\n      where(is.double),\n      \\(x) (x - mean(x))/sd(x)\n    ),\n    WaffleHouses = (WaffleHouses-mean(WaffleHouses))/sd(WaffleHouses)\n  )->\n  waffle_to_mod\n```\n:::\n\n\nJust the waffle mod\n\n\n::: {.cell}\n\n```{.r .cell-code}\nw_d_mod <- brm(\n  Divorce ~ WaffleHouses,\n  data = waffle_to_mod,\n  backend = \"cmdstanr\",\n  prior = prior(normal(0, 3), class = b),\n  file = \"w_d\"\n)\n```\n:::\n\n\nNow, with the South adjustment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nw_d_s_mod <- brm(\n  Divorce ~ WaffleHouses + South,\n  data = waffle_to_mod,\n  backend = \"cmdstanr\",\n  prior = prior(normal(0, 3), class = b),\n  file = \"w_d_s\"  \n)\n```\n:::\n\n\nWith the inappropriate adjustment for just \"marriage\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\nw_d_m_mod <- brm(\n  Divorce ~ WaffleHouses + Marriage,\n  data = waffle_to_mod,\n  backend = \"cmdstanr\",\n  prior = prior(normal(0, 3), class = b),\n  file = \"w_d_m\"  \n)\n```\n:::\n\n\nWith the marriage and age adjustment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nw_d_m_a_mod <- brm(\n  Divorce ~ WaffleHouses + Marriage + MedianAgeMarriage,\n  data = waffle_to_mod,\n  backend = \"cmdstanr\",\n  prior = prior(normal(0, 3), class = b),\n  file = \"w_d_m_a\"  \n)\n```\n:::\n\n\nNow, just to grab estimates for the effect of WaffleHouses for these all.\n\n\n::: {.cell crop='true'}\n\n```{.r .cell-code  code-fold=\"true\"}\nlist(\n  `~waffle` = w_d_mod,\n  `~waffle + south` = w_d_s_mod,\n  `~waffle + marriage` = w_d_m_mod,\n  `~waffle + marriage + age` = w_d_m_a_mod\n) |> \n  map(\n    ~ spread_draws(.x, b_WaffleHouses)\n  ) |> \n  list_rbind(\n    names_to = \"model\"\n  ) |> \n  mutate(model = fct_reorder(model, b_WaffleHouses)) |> \n  ggplot(aes(b_WaffleHouses, model))+\n    geom_vline(xintercept = 0)+\n    stat_halfeye()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-31-1.png){width=576}\n:::\n:::\n\n\nI wonder whether including a random intercept of location would have a similar effect adjusting for \"South\"?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nw_d_L_mod <- brm(\n  Divorce ~ WaffleHouses + (1|Loc),\n  data = waffle_to_mod,\n  backend = \"cmdstanr\",\n  prior = prior(normal(0, 3), class = b),\n  file = \"w_d_l\"  \n)\n```\n:::\n\n::: {.cell crop='true'}\n\n```{.r .cell-code  code-fold=\"true\"}\nlist(\n  `~waffle` = w_d_mod,\n  `~waffle + south` = w_d_s_mod,\n  `~waffle + marriage` = w_d_m_mod,\n  `~waffle + marriage + age` = w_d_m_a_mod,\n  `~waffle + (1|location)` = w_d_L_mod\n) |> \n  map(\n    ~ spread_draws(.x, b_WaffleHouses)\n  ) |> \n  list_rbind(\n    names_to = \"model\"\n  ) |> \n  mutate(model = fct_reorder(model, b_WaffleHouses)) |> \n  ggplot(aes(b_WaffleHouses, model))+\n    geom_vline(xintercept = 0)+\n    stat_halfeye()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-33-1.png){width=576}\n:::\n:::\n\n\nWell, not much!\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}